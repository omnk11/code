//Learning and Revising DOT net concepts :

below site is improtant and have listed all the imprtant questions which covers the DOT net conecepts.

https://interviewzilla.com/net/net-interview-questions-for-experienced/




Definitions
String: In C#, a string is an immutable sequence of characters. This means once a string object is created, it cannot be changed. Any modification to a string results in the creation of a new string object.
StringBuilder: The StringBuilder class in C# is used to represent a mutable string of characters. Unlike string, StringBuilder allows you to modify the string without creating a new object, making it more efficient for scenarios where you need to perform multiple modifications to a string.
Examples
String Example
C#

using System;

class Program
{
    static void Main()
    {
        string str = "Hello";
        str += " World"; // This creates a new string object
        Console.WriteLine(str); // Output: Hello World
    }
}
AI-generated code. Review and use carefully. More info on FAQ.
In this example, the += operator creates a new string object each time it is used, which can be inefficient if done repeatedly.

StringBuilder Example
C#

using System;
using System.Text;

class Program
{
    static void Main()
    {
        StringBuilder sb = new StringBuilder("Hello");
        sb.Append(" World"); // This modifies the existing StringBuilder object
        Console.WriteLine(sb.ToString()); // Output: Hello World
    }
}
In this example, the Append method modifies the existing StringBuilder object, making it more efficient for multiple modifications.

When to Use Which
Use string when the value is not expected to change frequently.
Use StringBuilder when you need to perform multiple modifications to a string, such as in loops or complex string manipulations.


//String and String Builder Methods in the C# click on below link
https://www.bing.com/chat?q=string+and+stringbuilder+methods+in+c%23&sendquery=1&FORM=SCCODX




1.Features of OOPs with real time example.

They ll ask many questions related to this. Like - difference between interface and abstraction? - difference between abstract class and abstract method?

-how can you achieve abstraction?

-what is polymerphism and types of polymerphism

-method overloading and overriding with well explained example

2. Constructors and types

3.call by value and call by reference and where we should use?

4.virtual function

5.Exception handling

6.explain types of inheritances

7.Difference between struct and class

8.managed and unmanaged code in c#

9.Difference between constant and readonly with example

10.difference between internal and private

11.what is delegate?

12.Difference between list and collection

13.Dependency injection with example

14.why do we use partial class?

15.why do we use static class?

16.what are Func and Action, why do we use?

17.Anonymous methods

18.Difference between ref and out keyword

19.Difference between array and arraylist

20.String and string builder

Some questions from MVC

1.why mvc?

2.bundling and mimification

3.action filters and types

4.what is antiforgery token?

5.viewdata,viewbag,tempdata

6.Different ways to pass data from controller to view

7.what is routing?

8.why do we use partial view?

9.How to pass data from view to controller?

10.HTTPGET,HTTPPOST

11.Action results

12.Adding routes to webform application and mvc

13.Methods to add constraints to a route

14.IQueryable vs IEneumerable

15.why and how we use sessions in mvc?

16.what is custom action filter?

17.POCO Class

18.what is scaffolding?

19.How to bind more than one model to view?

20.How to validate data?

21.Data reader, Data set, Data Adapter, Data table

22.Connected architecture and disconnected architecture

23.Execute non query, execute scalar, execute reader

24.Difference between viewstate and session

25.what are nullable types and generic types

26.what is model binder?

27.How to increase performance?

28.session,cookie and cache

29.Difference between finalize and dispose


https://f5debug.net/350-interview-questions-and-answers-on-net-framework-oops-asp-net-c-net-sql-server-wcf-in-one-place/

